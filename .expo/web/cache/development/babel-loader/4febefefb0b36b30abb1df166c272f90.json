{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\izere\\\\RE\\\\screens\\\\ElevatorList\\\\index.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FAB, Appbar, Button } from 'react-native-paper';\n\nvar ElevatorScreen = function ElevatorScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('https://rocketmobile2000.herokuapp.com/api/elevators/notActive').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    icon: \"logout\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      return props.navigation.navigate('Sign In');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }\n  }, \"Log Out!\"), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Button, {\n        style: styles.buttonText,\n        icon: \"login\",\n        mode: \"outlined\",\n        onPress: function onPress() {\n          props.navigation.navigate('Elevator Status', {\n            id: item.id,\n            status: item.status\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, \"Id:\", item.id, \"     Status:\", item.status);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: '1'\n  },\n  instructions: {\n    ontSize: 18,\n    margin: 10,\n    textAlign: 'center'\n  },\n  button: {\n    flex: 1,\n    margin: 20,\n    margin: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 25,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  buttonText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  textinput: {\n    fontSize: 30,\n    height: 40,\n    margin: 10,\n    color: \"#fff\"\n  },\n  elevatorId: {\n    backgroundColor: \"red\",\n    padding: 20,\n    borderRadius: 5,\n    textAlign: \"center\",\n    borderBottomWidth: '1'\n  },\n  elevatorIdText: {\n    fontSize: 20,\n    color: '#rgb(24, 36, 56)'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 10,\n    top: 130\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default ElevatorScreen;","map":{"version":3,"sources":["C:/Users/izere/RE/screens/ElevatorList/index.js"],"names":["React","useState","useEffect","FAB","Appbar","Button","ElevatorScreen","props","isLoading","setLoading","data","setData","fetch","then","response","json","catch","error","console","finally","navigation","navigate","index","id","item","styles","buttonText","status","StyleSheet","create","container","flex","alignItems","justifyContent","borderBottomWidth","instructions","ontSize","margin","textAlign","button","fontSize","paddingTop","paddingBottom","fontWeight","alignSelf","textTransform","textinput","height","color","elevatorId","backgroundColor","padding","borderRadius","elevatorIdText","fab","position","right","top","image","resizeMode"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React,{useState,useEffect} from 'react';\r\nimport { ActivityIndicator,FlatList,Image, StyleSheet, Text, View, TouchableOpacity, ImageBackground, ScrollView} from 'react-native';\r\nimport {  FAB, Appbar, Button} from 'react-native-paper';\r\n\r\n\r\nconst ElevatorScreen=(props)=> {\r\n\r\n\r\n        const [isLoading, setLoading] = useState(true);\r\n        const [data, setData] = useState([]);\r\n\r\n      useEffect(()=>{\r\n          fetch('https://rocketmobile2000.herokuapp.com/api/elevators/notActive')\r\n            .then((response) => response.json())\r\n            .then((json) => setData(json))\r\n            .catch((error) => console.error(error))\r\n            .finally(() => setLoading(false));\r\n        }, []);\r\n\r\n\r\n    return (\r\n        <View>\r\n\r\n\r\n<Button icon=\"logout\" mode=\"contained\" onPress={() => props.navigation.navigate('Sign In')}>\r\n   Log Out!\r\n  </Button>\r\n\r\n  <TouchableOpacity>\r\n  \r\n        \r\n{isLoading ? <ActivityIndicator/> : (\r\n\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={({ id }, index) => id}\r\n          renderItem={({ item }) => (\r\n            <Button style={styles.buttonText}\r\n            icon=\"login\" mode=\"outlined\" onPress={() => {\r\n                // onPress event comes with an event object\r\n                props.navigation.navigate('Elevator Status', {\r\n\r\n                    id: item.id ,\r\n                    status: item.status\r\n\r\n                  });\r\n            }}>\r\n         Id:{item.id}     Status:{item.status}\r\n          </Button>\r\n\r\n          )}\r\n        />\r\n      )}\r\n\r\n\r\n  </TouchableOpacity>\r\n\r\n         </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderBottomWidth: '1',\r\n    // borderBottomColor: '#eee'\r\n   },\r\n    instructions: {\r\n      ontSize: 18,\r\n      margin: 10,\r\n      textAlign: 'center',\r\n      // color: 'rgb(34, 65, 115)',\r\n  \r\n    }, \r\n    button: {\r\n      flex: 1,\r\n      margin: 20,\r\n      // backgroundColor: \"#ecf0f1\",\r\n      margin: 10,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      fontSize: 25,\r\n      paddingTop: 20,\r\n      paddingBottom: 20\r\n  },\r\n  buttonText: {\r\n    fontSize: 15,\r\n    // color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\"\r\n},\r\n    textinput: {\r\n      fontSize:30, height: 40,\r\n      margin: 10,\r\n      color: \"#fff\",\r\n\r\n    },\r\n    elevatorId: {\r\n      backgroundColor: \"red\",\r\n      padding: 20,\r\n      borderRadius: 5,\r\n      textAlign: \"center\",\r\n      borderBottomWidth: '1',\r\n      // borderBottomColor: 'rgb(24, 36, 56)'\r\n    },\r\n    elevatorIdText: {\r\n      fontSize: 20,\r\n      color: '#rgb(24, 36, 56)',\r\n  \r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        margin: 16,\r\n        right: 10,\r\n        top: 130\r\n        ,\r\n      },\r\n      image: {\r\n        flex: 1,\r\n        resizeMode: \"cover\",\r\n        justifyContent: \"center\"\r\n      }\r\n  });\r\n\r\nexport default ElevatorScreen;"]},"metadata":{},"sourceType":"module"}