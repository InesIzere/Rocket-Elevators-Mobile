{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\izere\\\\RE\\\\screens\\\\SignIn\\\\index.js\";\n\nimport { TextInput, Button } from 'react-native-paper';\nimport logo from \"../assets/R2.png\";\nimport axios from 'axios';\nimport image from \"../assets/2.jpeg\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar StartupScreen = function StartupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var windowHeight = Dimensions.get('window').height;\n  var isLogged = useState(false);\n\n  function logInAuthentification() {\n    var employee_email = email.value;\n    if (employee_email == \"\") return alert(\"Email is Required !!\");\n    console.log(employee_email);\n    return axios.get(\"https://rocketmobile2000.herokuapp.com/api/employees/\" + employee_email).then(function (response) {\n      console.log('API inside');\n      console.log(response.data);\n      var answear = response.data;\n\n      if (answear == true) {\n        console.log('works');\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: \"Elevator List\",\n            isLogged: true\n          }]\n        });\n      } else {\n        console.log(\"Email is incorrect\");\n        alert(\"Sorry! the entered email  is not a valid listed agent\");\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: styles.logo,\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.exemple,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \" Welcome to Rocket Elevators\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Please Enter Your Email address\"), React.createElement(TextInput, {\n    style: {\n      color: \"white\",\n      height: 40,\n      borderColor: 'grey',\n      borderWidth: 1\n    },\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text\n      });\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    style: {\n      margin: 10\n    },\n    icon: \"login\",\n    mode: \"contained\",\n    onPress: logInAuthentification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \" Log in \"))));\n};\n\nvar styles = StyleSheet.create({\n  exemple: {\n    color: '#fff',\n    fontSize: 50,\n    textAlign: 'center'\n  },\n  example: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 400,\n    height: 159,\n    marginBottom: 10\n  },\n  instructions: {\n    color: '#888',\n    fontSize: 18,\n    margin: 15\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  textinput: {\n    fontSize: 30,\n    height: 40,\n    margin: 10\n  },\n  elevatorId: {\n    backgroundColor: \"red\",\n    padding: 20,\n    borderRadius: 5,\n    textAlign: \"center\"\n  },\n  elevatorIdText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default StartupScreen;","map":{"version":3,"sources":["C:/Users/izere/RE/screens/SignIn/index.js"],"names":["TextInput","Button","logo","axios","image","React","useState","StartupScreen","navigation","value","email","setEmail","windowHeight","Dimensions","get","height","isLogged","logInAuthentification","employee_email","alert","console","log","then","response","data","answear","reset","index","routes","name","styles","container","exemple","color","borderColor","borderWidth","text","margin","StyleSheet","create","fontSize","textAlign","example","flex","backgroundColor","alignItems","justifyContent","width","marginBottom","instructions","button","padding","borderRadius","buttonText","textinput","elevatorId","elevatorIdText","resizeMode"],"mappings":"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","sourcesContent":["import { TextInput, Button} from 'react-native-paper';\r\nimport logo from '../assets/R2.png';\r\nimport axios from 'axios';\r\nimport image from '../assets/2.jpeg';\r\n\r\nimport React,{useState} from 'react';\r\nimport { ImageBackground, StyleSheet, Text, Image, View, SafeAreaView, TouchableOpacity, Dimensions} from 'react-native';\r\nconst StartupScreen= ({ navigation }) => {\r\n  const [email, setEmail] = useState({ value: ''});\r\n  const windowHeight = Dimensions.get('window').height;\r\n  var isLogged = useState(false);\r\n\r\n  function logInAuthentification()  {\r\n    let employee_email = email.value;\r\n    if(employee_email == \"\") return alert(\"Email is Required !!\");\r\n    console.log (employee_email);\r\n    //Call API\r\n    return axios.get(`https://rocketmobile2000.herokuapp.com/api/employees/${employee_email}`)\r\n        .then(function (response) {\r\n          console.log ('API inside');\r\n          console.log (response.data);\r\n            const answear = response.data;\r\n            if (answear == true) {\r\n              console.log ('works');\r\n              navigation.reset({\r\n                                index: 0,\r\n                                routes: [{ name: \"Elevator List\", isLogged: true }],\r\n                            })\r\n            }\r\n            else{\r\n              console.log(\"Email is incorrect\");\r\n              alert(\"Sorry! the entered email  is not a valid listed agent\");\r\n            }\r\n        })\r\n      }\r\n \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={image} style={styles.image}>\r\n      <Image  source={logo} style={styles.logo} resizeMode=\"contain\"  />\r\n        <Text style={styles.exemple}> Welcome to Rocket Elevators</Text>\r\n        \r\n        <Text >Please Enter Your Email address</Text>\r\n          <TextInput    style={{color: \"white\",height: 40, borderColor: 'grey', borderWidth: 1 }}\r\n          value={email.value}  onChangeText={(text) => setEmail({ value: text})}  required />\r\n          <TouchableOpacity>\r\n            <Button  style = {{margin:10}}\r\n            icon=\"login\" mode=\"contained\" onPress={logInAuthentification} > Log in </Button>\r\n          </TouchableOpacity>\r\n        \r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    \r\n  exemple:{\r\n    color:'#fff', \r\n    fontSize:50, \r\n    textAlign:'center'\r\n  },\r\n  example:{\r\n    color:'white', \r\n    fontSize:20, \r\n    textAlign:'center'\r\n  \r\n  },\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    logo: {\r\n      width: 400,\r\n      height: 159,\r\n      marginBottom: 10,\r\n      \r\n    },\r\n    instructions: {\r\n      color: '#888',\r\n      fontSize: 18,\r\n      margin: 15,\r\n\r\n    }, \r\n    button: {\r\n      backgroundColor: \"blue\",\r\n      padding: 20,\r\n      borderRadius: 5,\r\n    },\r\n    buttonText: {\r\n      fontSize: 20,\r\n      color: '#fff',\r\n    },\r\n    textinput: {\r\n      fontSize:30, height: 40,\r\n      margin: 10\r\n    },\r\n    elevatorId: {\r\n      backgroundColor: \"red\",\r\n      padding: 20,\r\n      borderRadius: 5,\r\n      textAlign: \"center\"\r\n    },\r\n    elevatorIdText: {\r\n      fontSize: 20,\r\n      color: '#fff',\r\n\r\n    },\r\n    image: {\r\n      flex: 1,\r\n      resizeMode: \"cover\",\r\n      justifyContent: \"center\"\r\n    }\r\n    });\r\nexport default StartupScreen;"]},"metadata":{},"sourceType":"module"}