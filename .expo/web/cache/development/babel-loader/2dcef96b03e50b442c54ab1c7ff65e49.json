{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\izere\\\\RE\\\\screens\\\\ElevatorList\\\\index.js\";\n\nimport 'react-native-gesture-handler';\nimport image from \"../assets/2.jpeg\";\nimport logo from \"../assets/blue.png\";\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FAB, Appbar, Button } from 'react-native-paper';\n\nvar ElevatorScreen = function ElevatorScreen(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var isLogged = props.route.params;\n  useEffect(function () {\n    fetch('https://rocketmobile2000.herokuapp.com/api/elevators/notActive').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: styles.logo,\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    icon: \"logout\",\n    color: \"black\",\n    backgroundColor: \"#ecf0f1\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      return props.navigation.navigate('Sign In', {\n        isLogged: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, \"Log Out!\"), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Button, {\n        style: styles.buttonText,\n        icon: \"login\",\n        mode: \"outlined\",\n        color: \"red\",\n        onPress: function onPress() {\n          props.navigation.navigate('Elevator Status', {\n            id: item.id,\n            status: item.status,\n            isLogged: false\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \"Id:\", item.id, \"Status:\", item.status);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomColor: '#eeeeee'\n  },\n  logo: {\n    width: 400,\n    height: 159,\n    marginBottom: 10,\n    justifyContent: \"center\"\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  instructions: {\n    fontSize: 18,\n    margin: 10,\n    textAlign: 'center',\n    color: 'rgb(34, 65, 115)'\n  },\n  button: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: \"#ecf0f1\",\n    margin: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 25,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  buttonText: {\n    fontSize: 15,\n    color: \"#0f0f0f\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  textinput: {\n    fontSize: 30,\n    height: 40,\n    margin: 10,\n    color: \"#0f0f0f\"\n  },\n  elevatorId: {\n    backgroundColor: \"red\",\n    padding: 20,\n    borderRadius: 5,\n    textAlign: \"center\",\n    borderBottomColor: 'rgb(24, 36, 56)'\n  },\n  elevatorIdText: {\n    fontSize: 20,\n    color: 'rgb(24, 36, 56)'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 10,\n    top: 130\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  }\n});\nexport default ElevatorScreen;","map":{"version":3,"sources":["C:/Users/izere/RE/screens/ElevatorList/index.js"],"names":["image","logo","React","useState","useEffect","FAB","Appbar","Button","ElevatorScreen","props","isLoading","setLoading","data","setData","isLogged","route","params","fetch","then","response","json","catch","error","console","finally","styles","navigation","navigate","index","id","item","buttonText","status","StyleSheet","create","container","flex","alignItems","justifyContent","borderBottomColor","width","height","marginBottom","resizeMode","instructions","fontSize","margin","textAlign","color","button","backgroundColor","paddingTop","paddingBottom","fontWeight","alignSelf","textTransform","textinput","elevatorId","padding","borderRadius","elevatorIdText","fab","position","right","top"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport image from '../assets/2.jpeg';\r\nimport logo from '../assets/blue.png';\r\nimport React,{useState,useEffect} from 'react';\r\nimport { ActivityIndicator,FlatList,Image, StyleSheet, Text, View, TouchableOpacity, ImageBackground, ScrollView} from 'react-native';\r\nimport {  FAB, Appbar, Button} from 'react-native-paper';\r\n\r\n\r\nconst ElevatorScreen=(props)=> {\r\n\r\n\r\n        const [isLoading, setLoading] = useState(true);\r\n        const [data, setData] = useState([]);\r\n        var isLogged = props.route.params;\r\n\r\n      useEffect(()=>{\r\n          fetch('https://rocketmobile2000.herokuapp.com/api/elevators/notActive')\r\n            .then((response) => response.json())\r\n            .then((json) => setData(json))\r\n            .catch((error) => console.error(error))\r\n            .finally(() => setLoading(false));\r\n        }, []);\r\n\r\n\r\n    return (\r\n\r\n<View>\r\n<ImageBackground source={image} style={styles.image}>\r\n       <View>\r\n        <Image  source={logo} style={styles.logo} resizeMode=\"contain\"  />\r\n        </View>\r\n  <Button icon=\"logout\" color=\"black\" backgroundColor= \"#ecf0f1\"\r\n    mode=\"contained\" onPress={() => props.navigation.navigate('Sign In', {isLogged: false})}>\r\n    Log Out!\r\n  </Button>\r\n  <TouchableOpacity>   \r\n  {isLoading ? <ActivityIndicator/> : (\r\n    <FlatList\r\n      data={data}\r\n      keyExtractor={({ id }, index) => id}\r\n      renderItem={({ item }) => (\r\n      <Button style={styles.buttonText}\r\n        icon=\"login\" mode=\"outlined\" color=\"red\" onPress={() => {\r\n        // onPress event comes with an event object\r\n        props.navigation.navigate('Elevator Status', {\r\n          id: item.id ,\r\n          status: item.status,\r\n          isLogged: false\r\n        });\r\n      }}>\r\n        Id:{item.id}\r\n        Status:{item.status}\r\n      </Button>\r\n\r\n    )}/>\r\n  )}\r\n  </TouchableOpacity>\r\n  </ImageBackground>\r\n</View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \r\n    borderBottomColor: '#eeeeee'\r\n  },\r\n  logo: {\r\n\r\n    width: 400,\r\n    height: 159,\r\n    marginBottom: 10,\r\n    justifyContent: \"center\"\r\n    \r\n  },\r\n\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  instructions: {\r\n    fontSize: 18,\r\n    margin: 10,\r\n    textAlign: 'center',\r\n    color: 'rgb(34, 65, 115)',\r\n\r\n  }, \r\n  button: {\r\n    flex: 1,\r\n    margin: 20,\r\n    backgroundColor: \"#ecf0f1\",\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: 25,\r\n    paddingTop: 20,\r\n    paddingBottom: 20\r\n  },\r\n  buttonText: {\r\n    fontSize: 15,\r\n    color: \"#0f0f0f\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\"\r\n  },\r\n  textinput: {\r\n    fontSize:30, height: 40,\r\n    margin: 10,\r\n    color: \"#0f0f0f\",\r\n\r\n  },\r\n  elevatorId: {\r\n    backgroundColor: \"red\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    textAlign: \"center\",\r\n    \r\n    borderBottomColor: 'rgb(24, 36, 56)'\r\n  },\r\n  elevatorIdText: {\r\n    fontSize: 20,\r\n    color: 'rgb(24, 36, 56)',\r\n\r\n  },\r\n  fab: {\r\n      position: 'absolute',\r\n      margin: 16,\r\n      right: 10,\r\n      top: 130\r\n      ,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  }\r\n  });\r\n\r\nexport default ElevatorScreen;"]},"metadata":{},"sourceType":"module"}