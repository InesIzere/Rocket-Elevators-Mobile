{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\izere\\\\RE\\\\screens\\\\SignIn\\\\index.js\";\n\nimport { TextInput, Button } from 'react-native-paper';\nimport Logo from \"../assets/R2.png\";\nimport axios from 'axios';\nimport metal from \"../assets/2.jpeg\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar StartupScreen = function StartupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var isLogged = useState(false);\n\n  function logInAuthentification() {\n    var employee_email = email.value;\n    if (employee_email == \"\") return alert(\"Email is Required !!\");\n    console.log(employee_email);\n    return axios.get(\"https://rocketmobile2000.herokuapp.com/api/employees/\" + employee_email).then(function (response) {\n      console.log('API inside');\n      console.log(response.data);\n      var answear = response.data;\n\n      if (answear == true) {\n        console.log('works');\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: \"Elevator List\",\n            isLogged: true\n          }]\n        });\n      } else {\n        console.log(\"${employee_email} is incorrect\");\n        alert(\"Sorry!\\n${employee_email} is not the email of a listed agent\");\n      }\n    });\n  }\n\n  return React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/2.jpeg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/R2.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: sty,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \" Welcome to Rocket Elevators\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.instructions1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Please to start login using your email\"), React.createElement(TextInput, {\n    style: styles.loginButton,\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text\n      });\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.button,\n    icon: \"login\",\n    mode: \"contained\",\n    onPress: logInAuthentification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \" Log in \"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: '1',\n    borderBottomColor: '#eee'\n  },\n  example: {\n    color: '#fff',\n    fontSize: 50,\n    textAlign: 'center'\n  },\n  logoContainer: {\n    position: \"absolute\",\n    top: 30,\n    alignItems: \"center\",\n    fontSize: 50,\n    height: 70,\n    fontWeight: \"bold\",\n    margin: 15\n  },\n  loginButton: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#EF0909\"\n  },\n  registerButton: {\n    width: \"100%\",\n    height: 50,\n    backgroundColor: \"#0000FF\"\n  },\n  background: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 18,\n    margin: 10,\n    textAlign: 'center',\n    color: 'rgb(34, 65, 115)'\n  },\n  logo: {\n    width: 305,\n    height: 159,\n    resizeMode: \"contain\",\n    marginBottom: 30,\n    marginTop: 0\n  },\n  elevatorList: {\n    fontSize: 15,\n    margin: 10,\n    textAlign: 'center',\n    color: 'rgb(34, 65, 115)',\n    borderBottomWidth: '1',\n    borderBottomColor: '#eee'\n  },\n  button: {\n    marginTop: 20,\n    elevation: 8,\n    backgroundColor: \"#335e82\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 15,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n    padding: 10,\n    borderRadius: 5\n  },\n  textinput: {\n    fontSize: 50,\n    height: 70,\n    margin: 15\n  }\n});\nexport default StartupScreen;","map":{"version":3,"sources":["C:/Users/izere/RE/screens/SignIn/index.js"],"names":["TextInput","Button","Logo","axios","metal","React","useState","StartupScreen","navigation","value","email","setEmail","isLogged","logInAuthentification","employee_email","alert","console","log","get","then","response","data","answear","reset","index","routes","name","styles","background","require","logoContainer","logo","sty","instructions1","loginButton","text","button","StyleSheet","create","container","flex","alignItems","justifyContent","borderBottomWidth","borderBottomColor","example","color","fontSize","textAlign","position","top","height","fontWeight","margin","width","backgroundColor","registerButton","title","resizeMode","marginBottom","marginTop","elevatorList","elevation","borderRadius","paddingVertical","paddingHorizontal","padding","buttonText","alignSelf","textTransform","textinput"],"mappings":"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","sourcesContent":["import { TextInput, Button} from 'react-native-paper';\r\nimport Logo from '../assets/R2.png';\r\nimport axios from 'axios';\r\nimport metal from '../assets/2.jpeg';\r\n\r\nimport React,{useState} from 'react';\r\nimport { ImageBackground, StyleSheet, Text, Image, View, SafeAreaView, TouchableOpacity} from 'react-native';\r\nconst StartupScreen= ({ navigation }) => {\r\n  const [email, setEmail] = useState({ value: ''})\r\n  var isLogged = useState(false);\r\n\r\n  function logInAuthentification()  {\r\n    let employee_email = email.value;\r\n    if(employee_email == \"\") return alert(\"Email is Required !!\");\r\n    console.log (employee_email);\r\n    //Call API\r\n    return axios.get(`https://rocketmobile2000.herokuapp.com/api/employees/${employee_email}`)\r\n        .then(function (response) {\r\n          console.log ('API inside');\r\n          console.log (response.data);\r\n            const answear = response.data;\r\n            if (answear == true) {\r\n              console.log ('works');\r\n              navigation.reset({\r\n                                index: 0,\r\n                                routes: [{ name: \"Elevator List\", isLogged: true }],\r\n                            })\r\n            }\r\n            else{\r\n              console.log(\"${employee_email} is incorrect\");\r\n              alert(\"Sorry!\\n${employee_email} is not the email of a listed agent\");\r\n            }\r\n        })\r\n      }\r\n \r\n\r\n  return (\r\n    <ImageBackground  style={styles.background} source={require('../assets/2.jpeg')}>\r\n      <View style={styles.logoContainer}>\r\n      <Image style={styles.logo} source={require('../assets/R2.png')} />\r\n      <Text style={sty}> Welcome to Rocket Elevators</Text>\r\n       \r\n      </View>\r\n      \r\n      <View>\r\n        <Text style = {styles.instructions1}>Please to start login using your email</Text>\r\n        <TextInput style={styles.loginButton}  value={email.value}  onChangeText={(text) => setEmail({ value: text})}  required />\r\n        <TouchableOpacity>\r\n          <Button style = {styles.button}\r\n          icon=\"login\" mode=\"contained\" onPress={logInAuthentification} > Log in </Button>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n      flex: 1,\r\n     \r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n      borderBottomWidth: '1',\r\n      borderBottomColor: '#eee'\r\n  },\r\n  example:{\r\n    color:'#fff', \r\n    fontSize:50, \r\n    textAlign:'center'\r\n  },\r\n  logoContainer: {\r\n    \r\n    position: \"absolute\",\r\n    top : 30,\r\n    alignItems: \"center\",\r\n    fontSize:50, \r\n    height: 70,\r\n    fontWeight: \"bold\",\r\n    margin: 15\r\n  },\r\n  loginButton: {\r\n\r\n    width:\"100%\",\r\n    height: 50,\r\n    backgroundColor: \"#EF0909\",\r\n\r\n  },\r\n  registerButton: {\r\n\r\n    width:\"100%\",\r\n    height: 50,\r\n    backgroundColor: \"#0000FF\",\r\n\r\n  },\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  \r\n    },\r\n  title: {\r\n      fontSize: 18,\r\n      margin: 10,\r\n      textAlign: 'center',\r\n      color: 'rgb(34, 65, 115)',\r\n},\r\n   logo: {\r\n  width: 305,\r\n  height: 159,\r\n  resizeMode: \"contain\",\r\n  marginBottom: 30,\r\n  marginTop: 0,\r\n},\r\n  elevatorList: {\r\n      fontSize: 15,\r\n      margin: 10,\r\n      textAlign: 'center',\r\n      color: 'rgb(34, 65, 115)',\r\n      borderBottomWidth: '1',\r\n      borderBottomColor: '#eee'\r\n  },\r\n\r\n  button: {\r\n    marginTop: 20,\r\n    elevation: 8,\r\n    backgroundColor: \"#335e82\",\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 12\r\n},\r\n  button: {\r\n    backgroundColor: \"blue\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n      fontSize: 15,\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n      alignSelf: \"center\",\r\n      textTransform: \"uppercase\",\r\n      padding: 10,\r\n      borderRadius: 5\r\n  },\r\n  textinput: {\r\n    fontSize:50, height: 70,\r\n    margin: 15\r\n  }\r\n});\r\nexport default StartupScreen;"]},"metadata":{},"sourceType":"module"}