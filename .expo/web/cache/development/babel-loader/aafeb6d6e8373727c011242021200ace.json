{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\izere\\\\RE\\\\screens\\\\ElevatorStatus\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.PUTData = function (ev) {\n      _this.onButtonPress();\n\n      var elevatorid = _this.props.navigation.state.params.elevator.id;\n      var status = _this.props.navigation.state.params.elevator.status;\n      fetch(\"https://rocketmobile2000.herokuapp.com/api/elevators/notA\" + elevatorid, {\n        credentials: \"include\",\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: elevatorid,\n          status: \"Active\"\n        })\n      });\n    };\n\n    _this.onButtonPress = function () {\n      _this.setState({\n        sizelogout: {\n          height: 20,\n          width: 275,\n          marginTop: 20,\n          marginBottom: 20\n        },\n        buttonleave: \"Elevator list\",\n        buttonColor: \"#008000\",\n        title: \"Status is now Active\"\n      });\n    };\n\n    _this.handleBackButtonClick = _this.handleBackButtonClick.bind(_assertThisInitialized(_this));\n    _this.state = {\n      sizelogout: {\n        height: 0,\n        width: 0\n      },\n      stylelog: \"\",\n      buttonleave: \"\",\n      buttonColor: \"red\",\n      title: \"change status to Active\",\n      data: null,\n      loaded: true,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      BackHandler.addEventListener(\"hardwareBackPress\", this.handleBackButtonClick);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButtonClick);\n    }\n  }, {\n    key: \"handleBackButtonClick\",\n    value: function handleBackButtonClick() {\n      this.props.navigation.navigate(\"Elevator\");\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/R2.png\"),\n        style: styles.rocketimages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: \"bold\",\n          top: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, \"Elevator id :\", this.props.navigation.state.params.elevator.id), React.createElement(View, {\n        style: {\n          width: 275,\n          marginTop: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        style: styles.ElevatorButtton,\n        title: this.state.title,\n        onPress: function onPress() {\n          return _this2.PUTData();\n        },\n        color: this.state.buttonColor,\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            isHidden: value\n          });\n        },\n        value: this.state.isHidden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: this.state.sizelogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        title: this.state.buttonleave,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Elevator\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  ElevatorButtton: {\n    marginTop: 150\n  },\n  rocketimages: {\n    height: 90,\n    width: 250,\n    top: 50\n  },\n  err: {\n    alignItems: \"center\",\n    color: \"red\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/izere/RE/screens/ElevatorStatus/index.js"],"names":["React","App","props","PUTData","ev","onButtonPress","elevatorid","navigation","state","params","elevator","id","status","fetch","credentials","method","headers","Accept","body","JSON","stringify","setState","sizelogout","height","width","marginTop","marginBottom","buttonleave","buttonColor","title","handleBackButtonClick","bind","stylelog","data","loaded","error","BackHandler","addEventListener","removeEventListener","navigate","styles","container","require","rocketimages","fontSize","fontWeight","top","ElevatorButtton","value","isHidden","Component","StyleSheet","create","alignItems","backgroundColor","err","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  View,\r\n  Button,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  TouchableHighlight\r\n} from \"react-native\";\r\nimport { BackHandler } from \"react-native\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleBackButtonClick = this.handleBackButtonClick.bind(this);\r\n\r\n    this.state = {\r\n      sizelogout: { height: 0, width: 0 },\r\n      stylelog: \"\",\r\n      buttonleave: \"\",\r\n      buttonColor: \"red\",\r\n      title: \"change status to Active\",\r\n      data: null,\r\n      loaded: true,\r\n      error: null\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      this.handleBackButtonClick\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BackHandler.removeEventListener(\r\n      \"hardwareBackPress\",\r\n      this.handleBackButtonClick\r\n    );\r\n  }\r\n\r\n  handleBackButtonClick() {\r\n    this.props.navigation.navigate(\"Elevator\");\r\n\r\n    return true;\r\n  }\r\n  PUTData = ev => {\r\n    this.onButtonPress();\r\n    var elevatorid = this.props.navigation.state.params.elevator.id;\r\n    var status = this.props.navigation.state.params.elevator.status;\r\n\r\n    fetch(\r\n      \"https://rocketmobile2000.herokuapp.com/api/elevators/notA\" + elevatorid,\r\n\r\n      {\r\n        credentials: \"include\",\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          id: elevatorid,\r\n          status: \"Active\"\r\n        })\r\n      }\r\n    );\r\n  };\r\n\r\n  onButtonPress = () => {\r\n    this.setState({\r\n      sizelogout: { height: 20, width: 275, marginTop: 20, marginBottom: 20 },\r\n      buttonleave: \"Elevator list\",\r\n      buttonColor: \"#008000\",\r\n      title: \"Status is now Active\"\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image\r\n          source={require(\"../assets/R2.png\")}\r\n          style={styles.rocketimages}\r\n        />\r\n        <Text style={{ fontSize: 24, fontWeight: \"bold\", top: 80 }}>\r\n          Elevator id :{this.props.navigation.state.params.elevator.id}\r\n        </Text>\r\n        <View style={{ width: 275, marginTop: 90 }}>\r\n          <Button\r\n            style={styles.ElevatorButtton}\r\n            title={this.state.title}\r\n            onPress={() => this.PUTData()}\r\n            color={this.state.buttonColor}\r\n            onValueChange={value => this.setState({ isHidden: value })}\r\n            value={this.state.isHidden}\r\n          />\r\n        </View>\r\n        <View style={this.state.sizelogout}>\r\n          <Button\r\n            title={this.state.buttonleave}\r\n            onPress={() => this.props.navigation.navigate(\"Elevator\")}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\"\r\n    // justifyContent: \"center\"\r\n  },\r\n\r\n  ElevatorButtton: {\r\n    marginTop: 150\r\n  },\r\n  rocketimages: {\r\n    height: 90,\r\n    width: 250,\r\n    top: 50\r\n  },\r\n\r\n  err: {\r\n    alignItems: \"center\",\r\n    color: \"red\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}